SOTD: Breaking The Girl - Red Hot Chili Peppers

Aim: If you can't (al)locate your memory the... I forget

Dynamic Memory Allocation
	malloc(int x)
	
		Allocates x bytes of memory (from the heap)
		
		Returns te address at the beginning of the allocation
		
		Returns a void *, always typecast to the correct pointer type.
		
		int *p;
		p = (int *)malloc(5 * sizeof(int));
		
	calloc(int n, int x)
	
		Allocates n * x bytes of memory
		
		Ensures that each bit is set to 0
		
		Works like malloc in all other ways
		
		int *p;
		p = (int *)calloc(5, sizeof(int));
		
	realloc(void *p, int x)
	
		Changes the amount of memory allocated to a given block.
		
		p must be a pointer to the beginning of an allocated block of memory, but it does not have to be the original pointer
		
		If x is smaller than the original size of the allocation, the extra bytes will be realeased
		
		int *p;
		p = (int *)malloc(20);
		p = (int *)realloc(p, 40);
		
	free
		Releases dynamically allocated memory
		
		Takes one parameter, a pointer to the beginning of a dynamically allocated block of memory.
		
		Every call to malloc/calloc should have a corresponding call to free
		
		int *p;
		p = (int *)malloc(20);
		free(p);
